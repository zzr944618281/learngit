一、综述

显示规则
隐藏规则
变量定义
文件指示和注释

文件名：默认顺序makefile、Makefile
引用其他的makefile
include<filename>

make执行顺序

二、书写规则

targets:prerequisites
	command

可以使用通配符

伪目标：
并没有prerequisites
并不是文件，没有相应的命令生成该文件
.PHONY : clean 显示定义clean为伪目标
clean:
	rm -f *.o


变量：
objects =*.o			单个.o文件
objects := $(wildcard*.o)	所有.o文件

多目标：
同时依赖相同文件，且生成的命令大致相同

静态模式：
%.o为所有以.o为结尾的目标 

objects = foo.o bar.o
all:$(objects)
$(objects):%.o:%.c
	$(CC) -c $(CFLAGS) $< -o $@


上面的例子中，指明了我们的目标从$object中获取，“%.o”表明要所有以“.o”结尾的目标，也就是“foo.o bar.o”，也就是变量$object集合的模式，而依赖模式“%.c”则取模式“%.o”的“%”，也就是“foo bar”，并为其加下“.c”的后缀，于是，我们的依赖目标就是“foo.c bar.c”。而命令中的“$<”和“$@”则是自动化变量，“$<”表示所有的依赖目标集（也就是“foo.c bar.c”），“$@”表示目标集（也就是“foo.o bar.o”）。于是，上面的规则展开后等价于下面的规则：
foo.o : foo.c
$(CC) -c $(CFLAGS) foo.c -o foo.o
bar.o : bar.c
$(CC) -c $(CFLAGS) bar.c -o bar.o

三、makefile命令的使用

四、变量
=
:= 	避免嵌套定义
?= 	
+=	追加


21111111111111


